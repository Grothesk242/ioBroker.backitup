{"version":3,"file":"static/js/src_bootstrap_jsx.43bc2d16.chunk.js","mappings":"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","sources":["App.jsx","theme.js","bootstrap.jsx","../node_modules/react-dom/client.js"],"sourcesContent":["// this file used only for simulation and not used in end build\r\n\r\nimport React from 'react';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nimport { I18n, Loader, GenericApp } from '@iobroker/adapter-react-v5';\r\n\r\nimport AdapterExist from './AdapterExist';\r\nimport BackupNow from './BackupNow';\r\nimport DetectConfig from './DetectConfig';\r\nimport GoogleDrive from './GoogleDrive';\r\nimport Onedrive from './Onedrive';\r\nimport Dropbox from './Dropbox';\r\nimport CheckConfigInvisible from './CheckConfigInvisible';\r\nimport Instance from './Instance';\r\nimport RestoreBackup from './RestoreBackup';\r\n\r\nconst styles = {\r\n    app: theme => ({\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        height: '100%',\r\n    }),\r\n    item: {\r\n        padding: 50,\r\n        width: 400,\r\n    },\r\n};\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        super(props, extendedProps);\r\n\r\n        this.state = {\r\n            data: {\r\n                myCustomAttribute: 'red',\r\n                telegramInstance: 'telegram.0',\r\n            },\r\n            theme: this.createTheme(),\r\n        };\r\n\r\n        const translations = {\r\n            en: require('./i18n/en'),\r\n            de: require('./i18n/de'),\r\n            ru: require('./i18n/ru'),\r\n            pt: require('./i18n/pt'),\r\n            nl: require('./i18n/nl'),\r\n            fr: require('./i18n/fr'),\r\n            it: require('./i18n/it'),\r\n            es: require('./i18n/es'),\r\n            pl: require('./i18n/pl'),\r\n            uk: require('./i18n/uk'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        I18n.setTranslations(translations);\r\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <StyledEngineProvider injectFirst>\r\n                <ThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType} />\r\n                </ThemeProvider>\r\n            </StyledEngineProvider>;\r\n        }\r\n\r\n        return <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={this.state.theme}>\r\n                <Box component=\"div\" sx={styles.app}>\r\n                    <div style={styles.item}>\r\n                        <AdapterExist\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/AdapterExist',\r\n                                type: 'custom',\r\n                                // adapter: 'zigbee',\r\n                                title: 'BackItUp Information!',\r\n                                alert: 'The JavaScript Adapter scripts are already saved in the ioBroker backup.\\n\\nThis option is just an additional option to be able to restore the scripts individually if necessary.',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <BackupNow\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            alive\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/BackupNow',\r\n                                type: 'custom',\r\n                                backUpType: 'ccu',\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <DetectConfig\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/DetectConfig',\r\n                                type: 'custom',\r\n                                adapter: 'ccu',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <CheckConfigInvisible\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/DetectConfigInvisible',\r\n                                type: 'custom',\r\n                                adapter: 'ccu',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <GoogleDrive\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/GoogleDrive',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <Onedrive\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/Onedrive',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <Dropbox\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/Dropbox',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <Instance\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"telegramInstance\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/Instance',\r\n                                type: 'custom',\r\n                                adapter: 'telegram',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <RestoreBackup\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomBackItUpSet/Components/RestoreBackup',\r\n                                type: 'custom',\r\n                                allowDownload: false,\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// this file used only for simulation and not used in end build\r\nimport { Theme } from '@iobroker/adapter-react-v5';\r\n\r\nexport default type => {\r\n    const danger = '#dd5325';\r\n    const success = '#73b6a8';\r\n    const theme = { ...Theme(type) };\r\n    if (!theme) {\r\n        return theme;\r\n    }\r\n    theme.palette.text.danger = {\r\n        color: danger,\r\n    };\r\n    theme.palette.text.success = {\r\n        color: success,\r\n    };\r\n\r\n    return theme;\r\n};\r\n","// this file used only for simulation and not used in end build\r\n\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport { Utils } from '@iobroker/adapter-react-v5';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nwindow.adapterName = 'adapter-component-backitup';\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    const container = document.getElementById('root');\r\n    const root = createRoot(container);\r\n    return root.render(<React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme(themeName)}>\r\n                <App\r\n                    socket={{port: 8081}}\r\n                    onThemeChange={(_theme) => {\r\n                        themeName = _theme;\r\n                        build();\r\n                    }}\r\n                    adapterName=\"backitup\"\r\n                />\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>);\r\n}\r\n\r\nbuild();\r\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["styles","theme","App","props","extendedProps","translations","AdapterExist","data","BackupNow","DetectConfig","CheckConfigInvisible","GoogleDrive","Onedrive","Dropbox","Instance","RestoreBackup","type","danger","success","themeName","build","container","_theme","m","exports"],"sourceRoot":""}